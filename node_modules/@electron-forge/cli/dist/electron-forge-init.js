"use strict";
var _path = _interopRequireDefault(require("path"));
var _core = require("@electron-forge/core");
var _commander = _interopRequireDefault(require("commander"));
var _fsExtra = _interopRequireDefault(require("fs-extra"));
require("./util/terminate");
var _workingDir = _interopRequireDefault(require("./util/working-dir"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
(async ()=>{
    let dir = process.cwd();
    _commander.default.version((await _fsExtra.default.readJson(_path.default.resolve(__dirname, '../package.json'))).version).arguments('[name]').option('-t, --template [name]', 'Name of the Forge template to use').option('-c, --copy-ci-files', 'Whether to copy the templated CI files (defaults to false)', false).option('-f, --force', 'Whether to overwrite an existing directory (defaults to false)', false).action((name)=>{
        dir = (0, _workingDir).default(dir, name, false);
    }).parse(process.argv);
    const initOpts = {
        dir,
        interactive: true,
        copyCIFiles: !!_commander.default.copyCiFiles,
        force: !!_commander.default.force
    };
    if (_commander.default.template) initOpts.template = _commander.default.template;
    await _core.api.init(initOpts);
})();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9lbGVjdHJvbi1mb3JnZS1pbml0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuXG5pbXBvcnQgeyBhcGksIEluaXRPcHRpb25zIH0gZnJvbSAnQGVsZWN0cm9uLWZvcmdlL2NvcmUnO1xuaW1wb3J0IHByb2dyYW0gZnJvbSAnY29tbWFuZGVyJztcbmltcG9ydCBmcyBmcm9tICdmcy1leHRyYSc7XG5cbmltcG9ydCAnLi91dGlsL3Rlcm1pbmF0ZSc7XG5pbXBvcnQgd29ya2luZ0RpciBmcm9tICcuL3V0aWwvd29ya2luZy1kaXInO1xuXG4oYXN5bmMgKCkgPT4ge1xuICBsZXQgZGlyID0gcHJvY2Vzcy5jd2QoKTtcbiAgcHJvZ3JhbVxuICAgIC52ZXJzaW9uKChhd2FpdCBmcy5yZWFkSnNvbihwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi4vcGFja2FnZS5qc29uJykpKS52ZXJzaW9uKVxuICAgIC5hcmd1bWVudHMoJ1tuYW1lXScpXG4gICAgLm9wdGlvbignLXQsIC0tdGVtcGxhdGUgW25hbWVdJywgJ05hbWUgb2YgdGhlIEZvcmdlIHRlbXBsYXRlIHRvIHVzZScpXG4gICAgLm9wdGlvbignLWMsIC0tY29weS1jaS1maWxlcycsICdXaGV0aGVyIHRvIGNvcHkgdGhlIHRlbXBsYXRlZCBDSSBmaWxlcyAoZGVmYXVsdHMgdG8gZmFsc2UpJywgZmFsc2UpXG4gICAgLm9wdGlvbignLWYsIC0tZm9yY2UnLCAnV2hldGhlciB0byBvdmVyd3JpdGUgYW4gZXhpc3RpbmcgZGlyZWN0b3J5IChkZWZhdWx0cyB0byBmYWxzZSknLCBmYWxzZSlcbiAgICAuYWN0aW9uKChuYW1lKSA9PiB7XG4gICAgICBkaXIgPSB3b3JraW5nRGlyKGRpciwgbmFtZSwgZmFsc2UpO1xuICAgIH0pXG4gICAgLnBhcnNlKHByb2Nlc3MuYXJndik7XG5cbiAgY29uc3QgaW5pdE9wdHM6IEluaXRPcHRpb25zID0ge1xuICAgIGRpcixcbiAgICBpbnRlcmFjdGl2ZTogdHJ1ZSxcbiAgICBjb3B5Q0lGaWxlczogISFwcm9ncmFtLmNvcHlDaUZpbGVzLFxuICAgIGZvcmNlOiAhIXByb2dyYW0uZm9yY2UsXG4gIH07XG4gIGlmIChwcm9ncmFtLnRlbXBsYXRlKSBpbml0T3B0cy50ZW1wbGF0ZSA9IHByb2dyYW0udGVtcGxhdGU7XG5cbiAgYXdhaXQgYXBpLmluaXQoaW5pdE9wdHMpO1xufSkoKTtcbiJdLCJuYW1lcyI6WyJkaXIiLCJwcm9jZXNzIiwiY3dkIiwicHJvZ3JhbSIsInZlcnNpb24iLCJmcyIsInJlYWRKc29uIiwicGF0aCIsInJlc29sdmUiLCJfX2Rpcm5hbWUiLCJhcmd1bWVudHMiLCJvcHRpb24iLCJhY3Rpb24iLCJuYW1lIiwid29ya2luZ0RpciIsInBhcnNlIiwiYXJndiIsImluaXRPcHRzIiwiaW50ZXJhY3RpdmUiLCJjb3B5Q0lGaWxlcyIsImNvcHlDaUZpbGVzIiwiZm9yY2UiLCJ0ZW1wbGF0ZSIsImFwaSIsImluaXQiXSwibWFwcGluZ3MiOiI7QUFBaUIsR0FBTSxDQUFOLEtBQU07QUFFVSxHQUFzQixDQUF0QixLQUFzQjtBQUNuQyxHQUFXLENBQVgsVUFBVztBQUNoQixHQUFVLENBQVYsUUFBVTs7QUFHRixHQUFvQixDQUFwQixXQUFvQjs7Ozs7O1dBRTlCLENBQUM7SUFDWixHQUFHLENBQUNBLEdBQUcsR0FBR0MsT0FBTyxDQUFDQyxHQUFHO0lBQ3JCQyxVQUFPLFNBQ0pDLE9BQU8sRUFBRSxLQUFLLENBQUNDLFFBQUUsU0FBQ0MsUUFBUSxDQUFDQyxLQUFJLFNBQUNDLE9BQU8sQ0FBQ0MsU0FBUyxFQUFFLENBQWlCLG9CQUFJTCxPQUFPLEVBQy9FTSxTQUFTLENBQUMsQ0FBUSxTQUNsQkMsTUFBTSxDQUFDLENBQXVCLHdCQUFFLENBQW1DLG9DQUNuRUEsTUFBTSxDQUFDLENBQXFCLHNCQUFFLENBQTRELDZEQUFFLEtBQUssRUFDakdBLE1BQU0sQ0FBQyxDQUFhLGNBQUUsQ0FBZ0UsaUVBQUUsS0FBSyxFQUM3RkMsTUFBTSxFQUFFQyxJQUFJLEdBQUssQ0FBQztRQUNqQmIsR0FBRyxPQUFHYyxXQUFVLFVBQUNkLEdBQUcsRUFBRWEsSUFBSSxFQUFFLEtBQUs7SUFDbkMsQ0FBQyxFQUNBRSxLQUFLLENBQUNkLE9BQU8sQ0FBQ2UsSUFBSTtJQUVyQixLQUFLLENBQUNDLFFBQVEsR0FBZ0IsQ0FBQztRQUM3QmpCLEdBQUc7UUFDSGtCLFdBQVcsRUFBRSxJQUFJO1FBQ2pCQyxXQUFXLElBQUloQixVQUFPLFNBQUNpQixXQUFXO1FBQ2xDQyxLQUFLLElBQUlsQixVQUFPLFNBQUNrQixLQUFLO0lBQ3hCLENBQUM7SUFDRCxFQUFFLEVBQUVsQixVQUFPLFNBQUNtQixRQUFRLEVBQUVMLFFBQVEsQ0FBQ0ssUUFBUSxHQUFHbkIsVUFBTyxTQUFDbUIsUUFBUTtJQUUxRCxLQUFLLENBQUNDLEtBQUcsS0FBQ0MsSUFBSSxDQUFDUCxRQUFRO0FBQ3pCLENBQUMifQ==